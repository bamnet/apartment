// Code generated by protoc-gen-go.
// source: apartment.proto
// DO NOT EDIT!

/*
Package apartment is a generated protocol buffer package.

It is generated from these files:
	apartment.proto

It has these top-level messages:
	Device
	ListDevicesRequest
	ListDevicesResponse
	GetDeviceRequest
	UpdateDeviceRequest
*/
package apartment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Device struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	FriendlyName string `protobuf:"bytes,2,opt,name=friendly_name,json=friendlyName" json:"friendly_name,omitempty"`
	State        bool   `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *Device) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

type ListDevicesRequest struct {
}

func (m *ListDevicesRequest) Reset()                    { *m = ListDevicesRequest{} }
func (m *ListDevicesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDevicesRequest) ProtoMessage()               {}
func (*ListDevicesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ListDevicesResponse struct {
	Device []*Device `protobuf:"bytes,1,rep,name=device" json:"device,omitempty"`
}

func (m *ListDevicesResponse) Reset()                    { *m = ListDevicesResponse{} }
func (m *ListDevicesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDevicesResponse) ProtoMessage()               {}
func (*ListDevicesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListDevicesResponse) GetDevice() []*Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type GetDeviceRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetDeviceRequest) Reset()                    { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()               {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetDeviceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateDeviceRequest struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *UpdateDeviceRequest) Reset()                    { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()               {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func init() {
	proto.RegisterType((*Device)(nil), "apartment.Device")
	proto.RegisterType((*ListDevicesRequest)(nil), "apartment.ListDevicesRequest")
	proto.RegisterType((*ListDevicesResponse)(nil), "apartment.ListDevicesResponse")
	proto.RegisterType((*GetDeviceRequest)(nil), "apartment.GetDeviceRequest")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "apartment.UpdateDeviceRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Apartment service

type ApartmentClient interface {
	ListDevices(ctx context.Context, in *ListDevicesRequest, opts ...grpc.CallOption) (*ListDevicesResponse, error)
	GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*Device, error)
	UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*Device, error)
}

type apartmentClient struct {
	cc *grpc.ClientConn
}

func NewApartmentClient(cc *grpc.ClientConn) ApartmentClient {
	return &apartmentClient{cc}
}

func (c *apartmentClient) ListDevices(ctx context.Context, in *ListDevicesRequest, opts ...grpc.CallOption) (*ListDevicesResponse, error) {
	out := new(ListDevicesResponse)
	err := grpc.Invoke(ctx, "/apartment.Apartment/ListDevices", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apartmentClient) GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*Device, error) {
	out := new(Device)
	err := grpc.Invoke(ctx, "/apartment.Apartment/GetDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apartmentClient) UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...grpc.CallOption) (*Device, error) {
	out := new(Device)
	err := grpc.Invoke(ctx, "/apartment.Apartment/UpdateDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Apartment service

type ApartmentServer interface {
	ListDevices(context.Context, *ListDevicesRequest) (*ListDevicesResponse, error)
	GetDevice(context.Context, *GetDeviceRequest) (*Device, error)
	UpdateDevice(context.Context, *UpdateDeviceRequest) (*Device, error)
}

func RegisterApartmentServer(s *grpc.Server, srv ApartmentServer) {
	s.RegisterService(&_Apartment_serviceDesc, srv)
}

func _Apartment_ListDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApartmentServer).ListDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apartment.Apartment/ListDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApartmentServer).ListDevices(ctx, req.(*ListDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apartment_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApartmentServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apartment.Apartment/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApartmentServer).GetDevice(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Apartment_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApartmentServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apartment.Apartment/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApartmentServer).UpdateDevice(ctx, req.(*UpdateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Apartment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apartment.Apartment",
	HandlerType: (*ApartmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDevices",
			Handler:    _Apartment_ListDevices_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _Apartment_GetDevice_Handler,
		},
		{
			MethodName: "UpdateDevice",
			Handler:    _Apartment_UpdateDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apartment.proto",
}

func init() { proto.RegisterFile("apartment.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x2c, 0x48, 0x2c,
	0x2a, 0xc9, 0x4d, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x85, 0x73, 0xb1, 0xb9, 0xa4, 0x96, 0x65, 0x26, 0xa7, 0x0a, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6,
	0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0xca, 0x5c, 0xbc, 0x69, 0x45,
	0x99, 0xa9, 0x79, 0x29, 0x39, 0x95, 0xf1, 0x60, 0x49, 0x26, 0xb0, 0x24, 0x0f, 0x4c, 0xd0, 0x0f,
	0xa4, 0x48, 0x84, 0x8b, 0xb5, 0xb8, 0x24, 0xb1, 0x24, 0x55, 0x82, 0x59, 0x81, 0x51, 0x83, 0x23,
	0x08, 0xc2, 0x51, 0x12, 0xe1, 0x12, 0xf2, 0xc9, 0x2c, 0x2e, 0x81, 0x18, 0x5e, 0x1c, 0x94, 0x5a,
	0x58, 0x9a, 0x5a, 0x5c, 0xa2, 0xe4, 0xc0, 0x25, 0x8c, 0x22, 0x5a, 0x5c, 0x90, 0x9f, 0x57, 0x9c,
	0x2a, 0xa4, 0xc9, 0xc5, 0x96, 0x02, 0x16, 0x92, 0x60, 0x54, 0x60, 0xd6, 0xe0, 0x36, 0x12, 0xd4,
	0x43, 0x38, 0x19, 0xa2, 0x36, 0x08, 0xaa, 0x40, 0x49, 0x8d, 0x4b, 0xc0, 0x3d, 0x15, 0x6a, 0x00,
	0xd4, 0x54, 0x6c, 0x4e, 0x07, 0xd9, 0x14, 0x5a, 0x90, 0x92, 0x58, 0x92, 0x8a, 0xaa, 0x14, 0xd9,
	0x26, 0x46, 0xbc, 0x36, 0x19, 0xdd, 0x67, 0xe4, 0xe2, 0x74, 0x84, 0x49, 0x0a, 0xf9, 0x71, 0x71,
	0x23, 0xb9, 0x5c, 0x48, 0x16, 0x49, 0x1f, 0xa6, 0x3f, 0xa5, 0xe4, 0x70, 0x49, 0x43, 0x3c, 0xac,
	0xc4, 0x20, 0x64, 0xcb, 0xc5, 0x09, 0xf7, 0x87, 0x90, 0x34, 0x92, 0x72, 0x74, 0xdf, 0x49, 0x61,
	0x3a, 0x51, 0x89, 0x41, 0xc8, 0x99, 0x8b, 0x07, 0xd9, 0x7b, 0x42, 0xc8, 0x16, 0x62, 0xf1, 0x37,
	0x56, 0x43, 0x92, 0xd8, 0xc0, 0xc9, 0xc1, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x36, 0x21,
	0x5d, 0x21, 0x02, 0x00, 0x00,
}
